// Mixin for generating new styles
@mixin btn-styles($btn-color, $btn-states-color) {
  background-color: $btn-color;

  &:hover,
  &:focus,
  &:active,
  &.active,
  &:active:focus,
  &:active:hover,
  &.active:focus,
  &.active:hover,
  .show > &.dropdown-toggle,
  .show > &.dropdown-toggle:focus,
  .show > &.dropdown-toggle:hover {
    color: $white-color;
    background-color: $btn-states-color;
    box-shadow: none;
  }

  &:not([data-action]):hover {
    box-shadow: 0 3px 8px 0 rgba(0, 0, 0, 0.17);
  }

  &.disabled,
  &:disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: $btn-color;
      border-color: $btn-color;
    }
  }

  // btn-neutral style
  @if $btn-color == $white-color {
    color: $primary-color;

    &.btn-danger {
      color: $danger-color;

      &:hover,
      &:focus,
      &:active,
      &:active:focus {
        color: $danger-states-color;
      }
    }

    &.btn-info {
      color: $info-color;

      &:hover,
      &:focus,
      &:active,
      &:active:focus {
        color: $info-states-color;
      }
    }

    &.btn-warning {
      color: $warning-color;

      &:hover,
      &:focus,
      &:active,
      &:active:focus {
        color: $warning-states-color;
      }
    }

    &.btn-success {
      color: $success-color;

      &:hover,
      &:focus,
      &:active,
      &:active:focus {
        color: $success-states-color;
      }
    }

    &.btn-default {
      color: $default-color;

      &:hover,
      &:focus,
      &:active,
      &:active:focus {
        color: $default-states-color;
      }
    }

    &.active,
    &:active,
    &:active:focus,
    &:active:hover,
    &.active:focus,
    &.active:hover,
    .show > &.dropdown-toggle,
    .show > &.dropdown-toggle:focus,
    .show > &.dropdown-toggle:hover {
      color: $primary-states-color;
      background-color: $white-color;
      box-shadow: none;
    }

    &:hover,
    &:focus {
      color: $primary-states-color;

      &:not(.nav-link) {
        box-shadow: none;
      }
    }
  } @else {
    color: $white-color;
  }

  &.btn-simple {
    color: $btn-color;
    border-color: $btn-color;

    &:hover,
    &:focus,
    &:active {
      color: $btn-states-color;
      background-color: $transparent-bg;
      border-color: $btn-states-color;
      box-shadow: none;
    }
  }

  &.btn-link {
    color: $btn-color;

    &:hover,
    &:focus,
    &:active {
      color: $btn-states-color;
      text-decoration: none;
      background-color: $transparent-bg;
      box-shadow: none;
    }
  }
}

@mixin btn-size($padding-vertical, $padding-horizontal, $font-size, $border) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  border-radius: $border;

  &.btn-simple {
    padding: $padding-vertical - 1 $padding-horizontal - 1;
  }
}

// for social buttons
@mixin social-buttons-color($color, $state-color) {
  color: #fff;
  background-color: $color;

  &:focus,
  &:active,
  &:hover {
    color: #fff;
    background-color: $state-color;
  }

  &.btn-simple {
    color: $color;
    background-color: $transparent-bg;
    border-color: $color;
    box-shadow: none;

    &:hover,
    &:focus,
    &:active {
      color: $state-color;
      border-color: $state-color;
    }
  }

  &.btn-neutral {
    color: $color;
    background-color: $white-color;

    &:hover,
    &:focus,
    &:active {
      color: $state-color;
    }
  }
}
